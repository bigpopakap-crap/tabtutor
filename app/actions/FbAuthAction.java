package actions;

import java.lang.annotation.ElementType;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;
import java.util.UUID;

import models.SessionModel;
import play.Logger;
import play.mvc.Action;
import play.mvc.Http.Context;
import play.mvc.Result;
import play.mvc.With;

import common.Globals;

import controllers.FbAuthWebController;
import doer.SessionDoer;

/**
 * This Action will log the user in through Facebook, and ensure that the authentication
 * token has not expired
 * It is assumed that the session has already been set up
 * 
 * @author bigpopakap@gmail.com
 * @since 2013-02-24
 *
 */
public class FbAuthAction extends Action.Simple {
	
	/**
	 * Annotation for applying FacebookAuthenticatedAction
	 * 
	 * @author bigpopakap@gmail.com
	 * @since 2013-02-24
	 *
	 */
	@With({SessionAction.class, FbAuthAction.class})
	@Target({ElementType.TYPE, ElementType.METHOD})
	@Retention(RetentionPolicy.RUNTIME)
	public @interface FbAuthed {}

	/** Implements the action */
	@Override
	public Result call(Context ctx) throws Throwable {
		Logger.debug("Calling into " + this.getClass().getName());
		
		//ensure that the session is set and exists
		String sessionIdStr = ctx.session().get(Globals.SESSION_ID_COOKIE_KEY);
		if (!SessionDoer.isValidExistingSessionId(sessionIdStr)) {
			//this chck takes care of nulls and ensures that a session exists with this ID
			throw new IllegalStateException("Session should have been generated by now");
		}
		
		//get the session object
		UUID sessionId = UUID.fromString(sessionIdStr);
		SessionModel session = SessionModel.FINDER.byId(sessionId);
		
		//if there is no Facebook authToken associated, or it has expired start the Facebook login flow
		//TODO add ability to force re-authentication
		if (SessionDoer.needsFacebookAuth(session)) {
			Logger.debug("Session needs Facebook auth. Redirecting to the login flow");
			return FbAuthWebController.fblogin(null, null);
		}
		//ensure that a user is referenced by the session
		else if (SessionDoer.needsUserReference(session)) {
			Logger.debug("Session needs a user reference. Fetching Facebook ID and looking up user object");
			//TODO get the user's Facebook ID from the Facebook API
			
			//TODO get the user ID associated with this Facebook ID, or create one
			
			//TODO add this user ID to the session object
			
			return delegate.call(ctx);
		}
		//all checks passed, pass control to the delegate action
		else {
			return delegate.call(ctx);
		}
	}
	
}