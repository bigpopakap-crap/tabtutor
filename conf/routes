# --------------------------------------------------------------------- #
#  ROUTING DEFINITIONS
#
# - page routes can be any path, except for reserved ones below
# - /internal/* is reserved for developer or admin pages
# - /internal/admin/* is reserved for pages that will be available, even in production
# - /internal/devtools/* is reserved for pages that will not be available in production
# - /internal/test/* is reserver for pages that will only be accessible by tests
# - /api/* is reserved for API calls. Everything should utilize these to do the actual work
# - /public/* is reserved for static files and resources
# --------------------------------------------------------------------- #

# --------------------------------------------------------------------- #
#	BEGIN PAGE ROUTING													#
# --------------------------------------------------------------------- #
GET     /                           controllers.SimpleWebController.landing()
GET		/fblogin					controllers.AuthWebController.fblogin(code ?= null, state ?= null, targetUrl ?= "/")
GET		/logout						controllers.AuthWebController.logout(targetUrl ?= "/")
GET		/songs/list					controllers.SongsWebController.list()
POST	/songs/create				controllers.SongsWebController.create()
GET		/artists/list				controllers.ArtistsWebController.list()
POST	/artists/create				controllers.ArtistsWebController.create()
GET		/albums/list				controllers.AlbumsWebController.list()
POST	/albums/create				controllers.AlbumsWebController.create()

# --------------------------------------------------------------------- #
#	BEGIN /INTERNAL/ADMIN PAGE ROUTING									#
# --------------------------------------------------------------------- #
# TODO these will be implemented as and when we find a need

# --------------------------------------------------------------------- #
#	BEGIN /INTERNAL/DEVTOOLS PAGE ROUTING								#
# --------------------------------------------------------------------- #
GET		/internal/devtools							controllers.DevtoolsWebController.directory()
GET		/internal/devtools/killserver				controllers.DevtoolsWebController.killServer()
GET		/internal/devtools/login/listusers			controllers.DevtoolsLoginWebController.listUsers()
POST	/internal/devtools/login/create				controllers.DevtoolsLoginWebController.create()
GET		/internal/devtools/login/login/:pk			controllers.DevtoolsLoginWebController.login(pk, targetUrl ?= "/")

# --------------------------------------------------------------------- #
#	BEGIN /INTERNAL/TEST PAGE ROUTING									#
# --------------------------------------------------------------------- #
GET		/internal/test/runtimeexception								controllers.TestWebController.runtimeException()
GET		/internal/test/errorpageexception/internalservererrorpage	controllers.TestErrorPageExceptionWebController.internalServerErrorPage()
GET		/internal/test/errorpageexception/notfoundpage				controllers.TestErrorPageExceptionWebController.notFoundPage()
GET		/internal/test/errorpageexception/gobackpage				controllers.TestErrorPageExceptionWebController.goBackPage()
GET		/internal/test/errorpageexception/gotopage					controllers.TestErrorPageExceptionWebController.goToPage()
GET		/internal/test/errorpageexception/gohomepage				controllers.TestErrorPageExceptionWebController.goHomePage()
GET		/internal/test/actions/sessionaction						controllers.TestActionsWebController.sessionAction()
GET		/internal/test/actions/authaction							controllers.TestActionsWebController.authAction()

# --------------------------------------------------------------------- #
#	BEGIN /API ROUTING													#
# --------------------------------------------------------------------- #
# TODO this will be implemented later

# --------------------------------------------------------------------- #
#	BEGIN STATIC FILE ROUTING											#
# --------------------------------------------------------------------- #
GET		/favicon.ico				controllers.Assets.at(path="/public", file="images/favicon.png")
GET     /public/*file               controllers.Assets.at(path="/public", file)

# --------------------------------------------------------------------- #
#	CATCH-ALL NOT FOUND PAGE											#
# --------------------------------------------------------------------- #
GET		/*path						controllers.SimpleWebController.pageNotFound(path)
