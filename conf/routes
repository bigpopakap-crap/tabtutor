# --------------------------------------------------------------------- #
#  ROUTING DEFINITIONS
#
# - page routes can be any path, except for reserved ones below
# - /internal/* is reserved for developer or admin pages
# - /internal/admin/* is reserved for pages that will be available, even in production
# - /internal/devtools/* is reserved for pages that will not be available in production
# - /internal/test/* is reserver for pages that will only be accessible by tests
# - /api/* is reserved for API calls. Everything should utilize these to do the actual work
# - /public/* is reserved for static files and resources
# --------------------------------------------------------------------- #

# --------------------------------------------------------------------- #
#	HIGHEST PRIORITY PAGES												#
# --------------------------------------------------------------------- #
#Specific page-not-found page
GET		/notfound					controllers.web.SimpleWebController.notFoundPage(path ?= null)

#Remove trailing slashes
GET		/*path/						controllers.web.SimpleWebController.untrail(path)

# --------------------------------------------------------------------- #
#	BEGIN PAGE ROUTING													#
# --------------------------------------------------------------------- #
GET     /                           controllers.web.SimpleWebController.landingPage()
GET		/fblogin					controllers.web.AuthWebController.fblogin(code ?= null, state ?= null, targetUrl ?= "/")
GET		/logout						controllers.web.AuthWebController.logout(targetUrl ?= "/")

GET		/songs						controllers.web.SongsWebController.listPage()
GET		/songs/:pk/:title			controllers.web.SongsWebController.detailPage(pk, title)
GET		/songs/:pk/:title/edit		controllers.web.SongsWebController.editPage(pk, title)
POST	/songs/new					controllers.web.SongsWebController.create()

GET		/artists					controllers.web.ArtistsWebController.listPage()
GET		/artists/:pk/:name			controllers.web.ArtistsWebController.detailPage(pk, name)
POST	/artists/new				controllers.web.ArtistsWebController.create()

GET		/albums						controllers.web.AlbumsWebController.listPage()
GET		/albums/:pk/:title			controllers.web.AlbumsWebController.detailPage(pk, title)
POST	/albums/new					controllers.web.AlbumsWebController.create()

# --------------------------------------------------------------------- #
#	BEGIN /INTERNAL/ADMIN PAGE ROUTING									#
# --------------------------------------------------------------------- #
# TODO these will be implemented as and when we find a need

# --------------------------------------------------------------------- #
#	BEGIN /INTERNAL/DEVTOOLS PAGE ROUTING								#
# --------------------------------------------------------------------- #
GET		/internal/devtools							controllers.web.devtools.DevtoolsWebController.directoryPage()
GET		/internal/devtools/killserver				controllers.web.devtools.DevtoolsWebController.killServer()
GET		/internal/devtools/login/listusers			controllers.web.devtools.DevtoolsLoginWebController.userListPage()
POST	/internal/devtools/login/create				controllers.web.devtools.DevtoolsLoginWebController.create()
GET		/internal/devtools/login/login/:pk			controllers.web.devtools.DevtoolsLoginWebController.login(pk, targetUrl ?= "/")

# --------------------------------------------------------------------- #
#	BEGIN /INTERNAL/TEST PAGE ROUTING									#
# --------------------------------------------------------------------- #
GET		/internal/test/runtimeexception								controllers.web.test.TestWebController.runtimeException()
GET		/internal/test/errorpageexception/internalservererrorpage	controllers.web.test.TestErrorPageExceptionWebController.internalServerErrorPage()
GET		/internal/test/errorpageexception/notfoundpage				controllers.web.test.TestErrorPageExceptionWebController.notFoundPage()
GET		/internal/test/actions/sessionaction						controllers.web.test.TestActionsWebController.sessionAction()
GET		/internal/test/actions/authaction							controllers.web.test.TestActionsWebController.authAction()

# --------------------------------------------------------------------- #
#	BEGIN /API ROUTING													#
# --------------------------------------------------------------------- #
# TODO this will be implemented later

# --------------------------------------------------------------------- #
#	BEGIN STATIC FILE ROUTING											#
# --------------------------------------------------------------------- #
GET		/favicon.ico				controllers.Assets.at(path="/public", file="images/favicon.png")
GET     /public/*file               controllers.Assets.at(path="/public", file)

# --------------------------------------------------------------------- #
#	CATCH-ALL NOT FOUND PAGE											#
# --------------------------------------------------------------------- #
GET		/*path						controllers.web.SimpleWebController.notFoundPage(path)
